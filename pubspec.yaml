name: oilstock
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.5 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  firebase_messaging: ^14.1.3 
  firebase_core: ^2.3.0 
  google_sign_in: ^5.4.2 
  
  image_picker: ^0.8.6
  shared_preferences: 2.0.15  
  carousel_pro: ^1.0.0 
  font_awesome_flutter: ^10.3.0
  cupertino_icons: ^1.0.2 
 
 # shrine_images: ^1.0.0
  intl: ^0.17.0
  http: ^0.13.3    
  url_launcher: ^6.0.17  
  
  flutter_launcher_icons:
  photo_view: ^0.14.0
  cached_network_image: ^3.2.0
  flutter_local_notifications: ^12.0.4
  badges: ^2.0.2
  flutter_app_badger: ^1.3.0  
  esc_pos_printer: ^4.1.0 
  oktoast: ^3.3.0 
  google_fonts: ^3.0.1  
  provider: ^6.0.4
  getwidget: ^3.0.1
  validators: ^3.0.0
  dio: ^4.0.6
  file_picker: ^5.2.3
  flutter_chat_types: ^3.6.0
  flutter_chat_ui: ^1.5.8
  mime: ^1.0.3
  fluttertoast: ^8.1.1
  google_maps_flutter: ^2.2.1 
  geolocator: ^9.0.2 
  gridlocator: ^0.0.2
  flutter_webview_pro: ^3.0.1+4
  

 
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.1
  cloud_firestore: ^4.1.0
  firebase_storage: ^11.0.6
  firebase_auth: ^4.1.5
  proj4dart: ^2.1.0
  label_marker: ^1.0.1
  sliding_up_panel: ^2.0.0+1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - messages.json
 
    - assets/icon/launcher_icon_main.png
    - assets/icon/free-icon.png
    - images/img_not_available.jpeg
    - images/mimi1.gif 
    - images/mimi2.gif
    - images/mimi3.gif
    - images/mimi4.gif
    - images/mimi5.gif  
    - images/mimi6.gif
    - images/mimi7.gif
    - images/mimi8.gif
    - images/mimi9.gif 
    - images/  
    - images/icon/ 
    - assets/icon/launcher_icon.png 
    - assets/icon/gas-station-location-icon.png
    - assets/icon/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts: 
    - family: S-Core
      fonts:
        - asset: assets/font/S-CoreDream-1Thin.woff
          weight: 100
        - asset: assets/font/S-CoreDream-2ExtraLight.woff
          weight: 200
        - asset: assets/font/S-CoreDream-3Light.woff
          weight: 300
        - asset: assets/font/S-CoreDream-4Regular.woff
          weight: 400
        - asset: assets/font/S-CoreDream-5Medium.woff
          weight: 500
        - asset: assets/font/S-CoreDream-6Bold.woff
          weight: 600
        - asset: assets/font/S-CoreDream-7ExtraBold.woff
          weight: 700
        - asset: assets/font/S-CoreDream-8Heavy.woff
          weight: 800
        - asset: assets/font/S-CoreDream-9Black.woff
          weight: 900 
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
#flutter pub pub run flutter_native_splash:create
#flutter_native_splash:
#  image: "assets/icon/launcher_icon.png"0
#  color: "ffffff" 
#z   android_disable_fullscreen: true
# 만드는 명령어 flutter pub run flutter_launcher_icons:main
flutter_icons:
  android: "launcher_icon" 
  ios: true
  image_path: "assets/icon/launcher_icon_main.png"

module: 
  androidX: true


# 빌드방법
# version: 1.1.0+10 버젼변경
# flutter build appbundle          
# flutter build apk --release --target-platform=android-arm64
#    def keystoreProperties = new Properties()
#    def keystorePropertiesFile = rootProject.file('key.properties')
#    if (keystorePropertiesFile.exists()) {
#       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
#   }

#  signingConfigs {
#      release {
#           keyAlias keystoreProperties['keyAlias']
#           keyPassword keystoreProperties['keyPassword']
#           storeFile file(keystoreProperties['storeFile'])
#           storePassword keystoreProperties['storePassword']
#       }
#   }

# flutter debug -d chrome --no-sound-null-safety --web-renderer=html 디버깅 실행 
# CORS 작동하지 않는 PHP 복붙노트 - 
# https://cnpnote.tistory.com/entry/CORS-%EC%9E%91%EB%8F%99%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-PHP
#